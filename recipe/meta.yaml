{% set version = "0.16.0" %}
{% set name = "meson-python" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/meson_python-{{ version }}.tar.gz
  sha256: 9068c17e36c89d6c7ff709fffb2a8a9925e8cd0b02629728e5ceaf2ec505cb5f

build:
  skip: True # [py<37]
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0

requirements:
  host:
    - meson 1.0.1
    - pip
    - pyproject-metadata 0.7.1
    - python
    - setuptools
    - tomli 1.2.2       # [py<311]
    # mesonpy takes care of creating the wheels without using
    # wheel. See
    # https://github.com/mesonbuild/meson-python/blob/main/mesonpy/_wheelfile.py
  run:
    # Tests fail when using meson >1.2 on Python 3.8 which could
    # affect other packages.  True on osx-arm64 at least.
    - meson 1.2         # [py<=38]
    - meson >=0.63.3    # [py<312]
    - meson >=1.2.3     # [py>=312]
    - packaging >=19.0
    - pyproject-metadata >=0.7.1
    - python
    # about setuptools see
    # https://github.com/mesonbuild/meson-python/pull/308
    - setuptools >=60.0 # [py>=312]
    - tomli >=1.0.0     # [py<311]

{% set tests_to_skip = "" %}
{% set tests_to_skip = tests_to_skip + "test_tags.py" %}                      # [unix or win]
{% set tests_to_skip = tests_to_skip + " or test_wheel.py" %}                 # [win]
{% set tests_to_skip = tests_to_skip + " or test_editable_install" %}         # [win]
{% set tests_to_skip = tests_to_skip + " or test_editble_reentrant" %}        # [win]
{% set tests_to_skip = tests_to_skip + " or test_editable_verbose" %}         # [win]
{% set tests_to_skip = tests_to_skip + " or test_spam" %}                     # [win]
{% set tests_to_skip = tests_to_skip + " or test_archflags_envvar_parsing" %} # [osx and x86_64]

# The following fail: assert 'macosx_10_9_x86_64' == 'macosx_10_16_x86_64'
{% set tests_to_skip = tests_to_skip + " or test_scipy_like" %}               # [osx and x86_64]
{% set tests_to_skip = tests_to_skip + " or test_detect_wheel_tag_module" %}  # [osx and x86_64]
{% set tests_to_skip = tests_to_skip + " or test_detect_wheel_tag_script" %}  # [osx and x86_64]
{% set tests_to_skip = tests_to_skip + " or test_limited_api" %}              # [osx and x86_64]
{% set tests_to_skip = tests_to_skip + " or test_limited_api_disabled" %}     # [osx and x86_64]

test:
  imports:
    - mesonpy
  source_files:
    - tests/
    - docs/
    - pyproject.toml
  requires:
    - {{ compiler('c') }}
    # cython required for Python 3.12 support, see
    # https://github.com/mesonbuild/meson-python/commit/936eee3fddfda34cbbb690acec8a170d089c1770
    - cython >=3.0.3
    - git
    - gitpython
    - patchelf   # [linux]
    - pkgconfig  # [linux]
    - pip
    - pytest
    - pytest-mock
    # see https://github.com/mesonbuild/meson-python/commit/424f2f97e00c5281437355acd1232d29431dcf23
    - typing-extensions >=3.7.4  # [py<310]
  commands:
    - pip check
    # CPPFLAGS exports -DNDEBUG which is unwanted
    - export CPPFLAGS=${CPPFLAGS//-DNDEBUG/}  # [unix]
    # tests are relevant to wheel and not conda packages
    - pytest tests -vv -k "not ({{ tests_to_skip }})"

about:
  home: https://github.com/mesonbuild/meson-python
  dev_url: https://github.com/mesonbuild/meson-python
  doc_url: https://mesonbuild.com/meson-python/
  summary: Meson Python build backend (PEP 517)
  description: |
    Python build backend (PEP 517) for Meson projects.
    It enables Python package authors to use Meson as the build backend for their packages.
  license: MIT
  license_file: LICENSE
  license_family: MIT

extra:
  recipe-maintainers:
    - awvwgk
    - rgommers
  skip-lints:
    - python_build_tool_in_run
    - build_tools_must_be_in_build
    - missing_wheel
